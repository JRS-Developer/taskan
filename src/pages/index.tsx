import Head from "next/head";
import {
  Box,
  Button,
  Flex,
  FormControl,
  FormLabel,
  Heading,
  Input,
  Menu,
  MenuButton,
  MenuItem,
  MenuList,
  Modal,
  ModalBody,
  ModalCloseButton,
  ModalContent,
  ModalFooter,
  ModalHeader,
  ModalOverlay,
  useDisclosure,
  VisuallyHidden,
} from "@chakra-ui/react";
import { useSession } from "next-auth/react";
import { GetServerSidePropsContext } from "next";
import { unstable_getServerSession } from "next-auth";
import { authOptions } from "./api/auth/[...nextauth]";
import { HiGlobe, HiLockClosed, HiPhotograph, HiPlus } from "react-icons/hi";
import { trpc } from "@/utils/trpc";

const Home = () => {
  const session = useSession();
  const { isOpen, onOpen, onClose } = useDisclosure();
  const { data: boards } = trpc.useQuery(["boards.getAll"]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box px="40">
        <Flex justify="space-between">
          <Heading size="md">All Boards</Heading>
          <Button leftIcon={<HiPlus />} onClick={onOpen}>
            Add
          </Button>
        </Flex>

        <Modal isOpen={isOpen} onClose={onClose}>
          <ModalOverlay />
          <ModalContent>
            <ModalHeader>Create New Board</ModalHeader>
            <ModalCloseButton />
            <ModalBody>
              <Box as="form">
                <FormControl isRequired>
                  <FormLabel>Title</FormLabel>
                  <Input placeholder="Add board title" />
                </FormControl>

                <Flex justify="space-between" gap="12" mt="4">
                  <Button leftIcon={<HiPhotograph />} w="full">
                    Cover
                  </Button>
                  <Menu isLazy>
                    <MenuButton
                      as={Button}
                      leftIcon={<HiLockClosed />}
                      w="full"
                    >
                      Private
                    </MenuButton>

                    <MenuList>
                      <MenuItem icon={<HiLockClosed />}>Private</MenuItem>
                      <MenuItem icon={<HiGlobe />}>Public</MenuItem>
                    </MenuList>
                  </Menu>
                </Flex>
              </Box>
            </ModalBody>
            <ModalFooter>
              <Button variant="ghost">Cancel</Button>
              <Button leftIcon={<HiPlus />}>Create</Button>
            </ModalFooter>
          </ModalContent>
        </Modal>

        <Flex gap="8">
          {boards?.map((board, i) => (
            <Box key={i}>X</Box>
          ))}
        </Flex>
      </Box>
    </>
  );
};

export const getServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );

  if (!session?.user) {
    return {
      redirect: {
        destination: "/api/auth/signin",
        permanent: false,
      },
    };
  }

  return {
    props: {
      session: session,
    },
  };
};

export default Home;
